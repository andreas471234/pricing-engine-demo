# Generated by Django 5.0.1 on 2024-01-18 15:22

import django.db.models.deletion
import pricingapp.models.quote
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pricingapp', '0005_alter_historicalproduct_unit_alter_product_unit'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalQuote',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('quote_no', models.CharField(db_index=True, default=pricingapp.models.quote.generate_application_no, max_length=15)),
                ('status', models.CharField(choices=[('INITIATED', 'INITIATED'), ('PENDING', 'PENDING'), ('INPROGRESS', 'INPROGRESS'), ('COMPLETED', 'COMPLETED'), ('CANCELLED', 'CANCELLED'), ('EXPIRED', 'EXPIRED')], db_index=True, default='INITIATED', max_length=100)),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Date of the expiry of quote if given', null=True)),
                ('payable_amount', models.DecimalField(decimal_places=4, default=0.0, help_text='Total Payable that customer need to pay', max_digits=30)),
                ('price_breakdown', models.JSONField(help_text='Breakdown of the total price')),
                ('remarks', models.TextField(blank=True, help_text='Remarks of the quote', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, help_text='Foreign key of Customer', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pricingapp.customer')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical quote',
                'verbose_name_plural': 'historical quotes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('quote_no', models.CharField(default=pricingapp.models.quote.generate_application_no, max_length=15, unique=True)),
                ('status', models.CharField(choices=[('INITIATED', 'INITIATED'), ('PENDING', 'PENDING'), ('INPROGRESS', 'INPROGRESS'), ('COMPLETED', 'COMPLETED'), ('CANCELLED', 'CANCELLED'), ('EXPIRED', 'EXPIRED')], db_index=True, default='INITIATED', max_length=100)),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Date of the expiry of quote if given', null=True)),
                ('payable_amount', models.DecimalField(decimal_places=4, default=0.0, help_text='Total Payable that customer need to pay', max_digits=30)),
                ('price_breakdown', models.JSONField(help_text='Breakdown of the total price')),
                ('remarks', models.TextField(blank=True, help_text='Remarks of the quote', null=True)),
                ('customer', models.ForeignKey(help_text='Foreign key of Customer', on_delete=django.db.models.deletion.CASCADE, related_name='quotes', to='pricingapp.customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalQuoteItem',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, help_text='Remarks of the quote item', null=True)),
                ('order_quantity', models.FloatField(default=1, help_text='Quantity of ordered product')),
                ('status', models.CharField(choices=[('INITIATED', 'INITIATED'), ('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('COMPLETED', 'COMPLETED'), ('CANCELLED', 'CANCELLED')], db_index=True, default='INITIATED', max_length=100)),
                ('selling_price', models.DecimalField(decimal_places=4, default=0.0, help_text='Selling price per unit', max_digits=25)),
                ('shipping_price', models.DecimalField(decimal_places=4, default=0.0, help_text='Shipping price of the item', max_digits=25)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, db_constraint=False, help_text='Foreign key of Product', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pricingapp.product')),
                ('supplier', models.ForeignKey(blank=True, db_constraint=False, help_text='Foreign key of Supplier', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pricingapp.supplier')),
                ('quote', models.ForeignKey(blank=True, db_constraint=False, help_text='Foreign key of Quote', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pricingapp.quote')),
            ],
            options={
                'verbose_name': 'historical quote item',
                'verbose_name_plural': 'historical quote items',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='QuoteItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, help_text='Remarks of the quote item', null=True)),
                ('order_quantity', models.FloatField(default=1, help_text='Quantity of ordered product')),
                ('status', models.CharField(choices=[('INITIATED', 'INITIATED'), ('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('COMPLETED', 'COMPLETED'), ('CANCELLED', 'CANCELLED')], db_index=True, default='INITIATED', max_length=100)),
                ('selling_price', models.DecimalField(decimal_places=4, default=0.0, help_text='Selling price per unit', max_digits=25)),
                ('shipping_price', models.DecimalField(decimal_places=4, default=0.0, help_text='Shipping price of the item', max_digits=25)),
                ('product', models.ForeignKey(help_text='Foreign key of Product', on_delete=django.db.models.deletion.CASCADE, related_name='quote_items', to='pricingapp.product')),
                ('quote', models.ForeignKey(help_text='Foreign key of Quote', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='pricingapp.quote')),
                ('supplier', models.ForeignKey(help_text='Foreign key of Supplier', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quote_items', to='pricingapp.supplier')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
